type AerodromeFactory @entity {
  id: ID!
  poolCount: Int!
  txCount: BigInt!
}

type Token @entity {
  id: ID!
  symbol: String!
  name: String!
  decimals: Int!
  totalSupply: BigInt!
  tradeVolume: BigDecimal!
    # Price fields
  ethPrice: BigDecimal!
  usdPrice: BigDecimal!
  
  txCount: BigInt!
  totalLiquidity: BigDecimal!
  tokenDayData: [TokenDayData!]! @derivedFrom(field: "token")
  poolDayDataBase: [PoolDayData!]! @derivedFrom(field: "token0")
  poolDayDataQuote: [PoolDayData!]! @derivedFrom(field: "token1")
  poolBase: [Pool!]! @derivedFrom(field: "token0")
  poolQuote: [Pool!]! @derivedFrom(field: "token1")
}

type Pool @entity {
  id: ID!
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
  isStable: Boolean!
  volumeToken0: BigDecimal!
  volumeToken1: BigDecimal!
  txCount: BigInt!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  poolHourData: [PoolHourData!]! @derivedFrom(field: "pool")
  mints: [Mint!]! @derivedFrom(field: "pool")
  burns: [Burn!]! @derivedFrom(field: "pool")
  swaps: [Swap!]! @derivedFrom(field: "pool")
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  mints: [Mint!]!
  burns: [Burn!]!
  swaps: [Swap!]!
}

type Mint @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pool: Pool!
  to: Bytes!
  sender: Bytes
  amount0: BigDecimal
  amount1: BigDecimal
  logIndex: BigInt
}

type Burn @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pool: Pool!
  sender: Bytes
  amount0: BigDecimal
  amount1: BigDecimal
  to: Bytes
  logIndex: BigInt
}

type Swap @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  pool: Pool!
  sender: Bytes!
  from: Bytes!
  amount0In: BigDecimal!
  amount1In: BigDecimal!
  amount0Out: BigDecimal!
  amount1Out: BigDecimal!
  to: Bytes!
  logIndex: BigInt
}

type AerodromeDayData @entity {
  id: ID!
  date: Int!
  dailyVolumeToken0: BigDecimal!
  dailyVolumeToken1: BigDecimal!
  txCount: BigInt!
}

type PoolHourData @entity {
  id: ID!
  hourStartUnix: Int!
  pool: Pool!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal
  hourlyVolumeToken0: BigDecimal!
  hourlyVolumeToken1: BigDecimal!
  hourlyTxns: BigInt!
}

type PoolDayData @entity {
  id: ID!
  date: Int!
  poolAddress: Bytes!
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal
  dailyVolumeToken0: BigDecimal!
  dailyVolumeToken1: BigDecimal!
  dailyTxns: BigInt!
}

type TokenDayData @entity {
  id: ID!
  date: Int!
  token: Token!
  dailyVolumeToken: BigDecimal!
  dailyTxns: BigInt!
  totalLiquidity: BigDecimal!
}